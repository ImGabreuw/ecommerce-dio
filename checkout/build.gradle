plugins {
    id "com.github.davidmc24.gradle.plugin.avro" version "1.2.0"
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'me.gabreuw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

ext {
    set('springCloudVersion', "2020.0.3")
    set('kafkaAvroVersion', "5.5.0")
    set('apacheAvroVersion', "1.10.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
    implementation "io.confluent:kafka-avro-serializer:${kafkaAvroVersion}"


    def lombok = 'org.projectlombok:lombok'
    compileOnly lombok
    annotationProcessor lombok

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly "org.apache.avro:avro:${apacheAvroVersion}"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

avro {
    fieldVisibility = "PRIVATE"
}

generateAvroJava {
    source 'src/main/resources/avro'
}